{"version":3,"sources":["components/auth/SignIn.js","components/auth/SignUp.js","components/layout/SignedInLink.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/passenger/CreateCheckinList.js","store/action/passAction.js","store/action/actionType.js","components/passenger/CheckinDetails.js","components/seats/SeatService.js","store/action/seatAction.js","components/seats/SeatAllocation.js","App.js","serviceWorker.js","store/reducer/passReducer.js","store/reducer/seatReducer.js","store/reducer/rootReducer.js","index.js"],"names":["SignIn","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","state","eamil","password","className","onSubmit","this","htmlFor","type","onChange","Component","SignUp","preventDetails","formDetails","details","console","log","email","firstName","lastName","role","M","FormSelect","init","SignedInLink","to","SignedOutLink","Navbar","CreateCheckinList","props","concat","passengerList","passengerName","address","age","gender","passportNo","specialPrivilage","foodFee","baggageFee","servicesFee","seatNo","createCheckin","AutoInit","redirect","defaultValue","connect","passengers","pass","dispatch","payload","CheckinDetails","getPassengerDetails","map","item","index","key","title","onClick","getUpdateDetails","testPassenger","getSeats","seatRows","localStorage","getItem","rows","undefined","number","tooltip","isReserved","orientation","strSeatRows","JSON","stringify","setItem","parse","updatedSeatRows","testac","rowsPayload","updatedRowsPayload","SeatAllocation","loading","str","tempSeats","addSeatCallback","addCb1","row","a","Promise","resolve","setTimeout","newTooltip","seat","updateSeatAllocation","removeSeatCallback","removeCb","includes","seats","filter","el","seatnum","_onClick","update","updatedRows","saveSeatAllocation","window","location","reload","length","style","marginTop","maxReservableSeats","alpha","visible","selectedByDefault","tooltipProps","multiline","React","service","getUpdatedSeat","data","action","strUpdate","App","path","component","Boolean","hostname","match","intialstate","passReducer","clear","passString","list","push","stringifyJson","Object","assign","passDataString","passData","initialState","rootReducer","combineReducers","auth","authReducer","newrows","forEach","itemRow","index1","col","index2","testob","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d762a5f2.chunk.js","sourcesContent":["import React,{ Component } from 'react'\r\n\r\nclass SignIn extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={ eamil:'',password:''}\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div> \r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>        \r\n                </div>\r\n               \r\n                \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                    </div>\r\n                </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default SignIn;","import React, { Component } from 'react'\r\nimport M from \"materialize-css\"\r\n\r\nclass SignUp extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            email:'',password:'',firstName:'',lastName:'',role:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        M.FormSelect.init(this.FormSelect);\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDetails();\r\n        let formDetails={\r\n            details:this.state\r\n        }\r\n        console.log(formDetails)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                        </div> \r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"lastName\">First Name</label>\r\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div> \r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>        \r\n                    </div>\r\n                   \r\n                    \r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignUp","import  React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst SignedInLink =() =>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/createCheckIn'>Check-In</NavLink></li>\r\n            <li><NavLink to='/getCheckDetails'>Checkin Details</NavLink></li>\r\n            <li><NavLink to='/'>LogOut</NavLink></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lightem-1'>L</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedInLink","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLink=()=>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\r\n            <li><NavLink to='/signin'>LogIn</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLink","import  React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLink from './SignedInLink'\r\nimport SignedOutLink from './SignedOutLink'\r\n\r\nconst Navbar=()=>{\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Airline</Link>\r\n                <SignedInLink />\r\n                <SignedOutLink />\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;"," import React, { Component } from 'react'\r\n import {connect} from 'react-redux'\r\n import M from 'materialize-css'\r\n import {history} from '../../App'\r\n import * as action from '../../store/action/passAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n class CreateCheckinList extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            passengerName:'',firstName:'',lastName:'',address:'',age:'',gender:'',passportNo:'',\r\n            specialPrivilage:'',foodFee:'',baggageFee:'',servicesFee:'',seatNo:''\r\n        };\r\n        // this.handleChange=this.handleChange.bind(this);\r\n        // this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        M.AutoInit();\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value,\r\n            passengerName:this.state.firstName.concat(this.state.lastName)\r\n        })\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        console.log(this.state,\"I am Component\")\r\n        let passengerList=this.state;\r\n\r\n        this.setState({\r\n            passengerName:'',firstName:'',lastName:'',address:'',age:'',gender:'',passportNo:'',\r\n            specialPrivilage:'',foodFee:'',baggageFee:'',servicesFee:'',seatNo:''\r\n        })\r\n        this.props.createCheckin(passengerList);\r\n       }\r\n\r\n    render(){\r\n        if(this.props.redirect){\r\n           return <Redirect to='/seatAllocation' />\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Passenger check in details</h5>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                        </div> \r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"lastName\">First Name</label>\r\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div> \r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"passportNo\">Passport No</label>\r\n                            <input type=\"text\" id=\"passportNo\" onChange={this.handleChange}/>\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"age\">Age</label>\r\n                            <input type=\"text\" id=\"age\" onChange={this.handleChange}/>\r\n                        </div> \r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"address\">Address</label>\r\n                            <input type=\"text\" id=\"address\" onChange={this.handleChange}/>\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <select defaultValue=\"\" id=\"gender\" onChange={this.handleChange}>\r\n                                <option value=\" disabled\">Choose your gender</option>\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                                <option value=\"none\">None</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"input-field col s6\">\r\n                            <select defaultValue=\"\" id=\"specialPrivilage\" onChange={this.handleChange}>\r\n                                <option value=\" disabled\">Choose your specialPrivilage</option>\r\n                                <option value=\"wheel-chair\">WheelChair</option>\r\n                                <option value=\"infant\">Infant</option>\r\n                                <option value=\"none\">None</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"foodFee\">Food Fare</label>\r\n                            <input type=\"text\" id=\"foodFee\" onChange={this.handleChange}/>\r\n                        </div> \r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"baggageFee\">Baggage Fare</label>\r\n                            <input type=\"text\" id=\"baggageFee\" onChange={this.handleChange}/>\r\n                        </div>        \r\n                    </div>    \r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s6\">\r\n                            <label htmlFor=\"serviceFee\">Other Services</label>\r\n                            <input type=\"text\" id=\"serviceFee\" onChange={this.handleChange}/>\r\n                        </div>      \r\n                    </div>   \r\n\r\n                    <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                        </div> \r\n\r\n                    </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n const mapStateToProps=(state)=>{\r\n     console.log(state,\"this is mapStateToProps in createList\")\r\n     return{\r\n         passengers:state.pass.passengers,\r\n         redirect:state.pass.redirect\r\n     }\r\n }\r\n\r\n const mapDispatchToProps=(dispatch)=>{\r\n     return{\r\n         createCheckin:passengerList=>dispatch(action.createPassenger(passengerList))\r\n }\r\n}\r\n\r\n export default connect(mapStateToProps,mapDispatchToProps)(CreateCheckinList);","import * as actionType from './actionType'\r\n\r\nexport const createPassenger=(passenger)=>{\r\n    return{\r\n        type:actionType.CREATE_PASSENGERS,\r\n        payload:passenger\r\n    }\r\n}\r\n\r\nexport const getPassengerDetails=()=>{\r\n    return{\r\n        type:actionType.GET_ALL_PASSENGERS\r\n    }\r\n}\r\n\r\nexport const getUpdateDetails=()=>{\r\n    return{\r\n        type:actionType.UPDATE_PASSENGERS\r\n    }\r\n}","export const GET_ALL_PASSENGERS=\"GET_ALL_PASSENGERS\";\r\nexport const CREATE_PASSENGERS=\"CREATE_PASSENGERS\";\r\nexport const UPDATE_PASSENGERS=\"UPDATE_PASSENGERS\";\r\nexport const CALL_SEATALLOCATION=\"CALL_SEATALLOCATION\";\r\nexport const UPDATE_SEATALLOCATION=\"UPDATE_SEATALLOCATION\";\r\nexport const CALL_SEATRESERVE=\"CALL_SEATRESERVE\""," import React,{ Component } from 'react'\r\n import { connect } from 'react-redux'\r\n import * as action from '../../store/action/passAction'\r\n\r\n class CheckinDetails extends Component{\r\n\r\n    \r\n    componentWillMount(){\r\n        this.props.getPassengerDetails();\r\n    }\r\n\r\n    render(){\r\n        debugger;\r\n        console.log(this.props.passengers,\"my render method\")\r\n        return(\r\n            <div>\r\n                <h3>My Details passengers</h3>\r\n                {this.props.passengers.map((item,index)=>(\r\n                    <p key={index}>{item.passengerName}</p>\r\n                )\r\n                )}\r\n                <button title=\"Click\" onClick={this.props.getUpdateDetails}>Click me....</button>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n const mapStateToProps=(state)=>{\r\n     debugger;\r\n     console.log(state,\"this is mapStateToProps\")\r\n     return{\r\n         passengers:state.pass.testPassenger\r\n     }\r\n }\r\n\r\n const mapDispatchToProps=(dispatch)=>{\r\n     return{\r\n         getPassengerDetails:()=>dispatch(action.getPassengerDetails()),\r\n         getUpdateDetails:()=>dispatch(action.getUpdateDetails())\r\n     }\r\n }\r\n\r\n export default connect(mapStateToProps,mapDispatchToProps)(CheckinDetails)","import * as testac from '../../store/action/seatAction'\r\n\r\nexport const getSeats=(dispatch)=>{\r\n    debugger;\r\n    let seatRows = localStorage.getItem('seatrows'); //consider this as a sync API call\r\n    let rows = [];\r\n    if (seatRows == null || seatRows == \"\" || seatRows == undefined) {\r\n        rows = [\r\n            [\r\n                { id: 1, number: 1, tooltip: \"Reserved by you\" },\r\n                { id: 2, number: 2, tooltip: \"Cost: 15$\" },\r\n                null,\r\n                {\r\n                    id: 3,\r\n                    number: \"3\",\r\n                    isReserved: true,\r\n                    orientation: \"east\",\r\n                    tooltip: \"Reserved by Rogger\"\r\n                },\r\n                { id: 4, number: \"4\", orientation: \"west\" }\r\n            ],\r\n            [\r\n                {\r\n                    id: 7,\r\n                    number: 1,\r\n                    isReserved: true,\r\n                    tooltip: \"Reserved by Matthias Nadler\"\r\n                },\r\n                { id: 8, number: 2, isReserved: true },\r\n                null,\r\n                { id: 9, number: \"3\", isReserved: true, orientation: \"east\" },\r\n                { id: 10, number: \"4\", orientation: \"west\" }\r\n            ],\r\n            [\r\n                { id: 13, number: 1 },\r\n                { id: 14, number: 2 },\r\n                null,\r\n                { id: 15, number: 3, isReserved: true, orientation: \"east\" },\r\n                { id: 16, number: \"4\", orientation: \"west\" }\r\n            ],\r\n            [\r\n                { id: 19, number: 1, tooltip: \"Cost: 25$\" },\r\n                { id: 20, number: 2 },\r\n                null,\r\n                { id: 21, number: 3, orientation: \"east\" },\r\n                { id: 22, number: \"4\", orientation: \"west\" }\r\n            ],\r\n            [\r\n                { id: 25, number: 1, isReserved: true },\r\n                { id: 26, number: 2, orientation: \"east\" },\r\n                null,\r\n                { id: 27, number: \"3\", isReserved: true },\r\n                { id: 28, number: \"4\", orientation: \"west\" }\r\n            ]\r\n        ];\r\n        let strSeatRows = JSON.stringify(rows);\r\n        localStorage.setItem('seatrows', strSeatRows);\r\n    } else {\r\n        rows = JSON.parse(seatRows);\r\n    }\r\n    let updatedSeatRows = localStorage.getItem('seatrows');\r\n    let payload = {\r\n        rowsPayload: rows,\r\n        updatedRowsPayload: JSON.parse(updatedSeatRows)\r\n    }\r\n    dispatch(testac.getseat(payload))\r\n}\r\n\r\nexport const saveSeatAllocation = (updatedRows) => (dispatch) => {\r\n    debugger;\r\n    var strUpdate = JSON.stringify(updatedRows);\r\n    localStorage.setItem('seatrows', strUpdate);\r\n}","import * as actionType from './actionType'\r\n\r\n\r\nexport const getseat=(payload)=>({\r\n    type:actionType.CALL_SEATALLOCATION,\r\n    payload:payload\r\n});\r\n\r\nexport const updateSeatAllocation=(seat)=>({\r\n    type:actionType.CALL_SEATRESERVE,\r\n    payload:seat\r\n});\r\n\r\nexport const getUpdatedSeat=(seats)=>({\r\n    type:actionType.UPDATE_SEATALLOCATION,\r\n    data:seats\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../store/action/seatAction';\r\nimport SeatPicker from \"react-seat-picker\";\r\nimport * as service from './SeatService';\r\n\r\nclass SeatAllocation extends React.Component{\r\n\r\n    componentWillMount() {\r\n        this.props.getSeats();\r\n      }\r\n      state = {\r\n        loading: false\r\n      }\r\n      str = [[]];\r\n      tempSeats = [];\r\n      addSeatCallback = ({ row, number, id }, addCb1) => {\r\n        this.setState(\r\n          {\r\n            loading: true\r\n          },\r\n          async () => {\r\n            await new Promise(resolve => setTimeout(resolve, 1500));\r\n            console.log(`Added seat ${number}, row ${row}, id ${id}`);\r\n            const newTooltip = `tooltip for id-${id} added by callback`;\r\n            addCb1(row, number, id, newTooltip);\r\n            let seat = {\r\n              row: row,\r\n              number: number,\r\n              id: id,\r\n              newTooltip: newTooltip\r\n            };\r\n            this.props.updateSeatAllocation(seat);\r\n            this.setState({ loading: false });\r\n          }\r\n        );\r\n      };\r\n    \r\n      removeSeatCallback = ({ row, number, id }, removeCb) => {\r\n        this.setState(\r\n          {\r\n            loading: true\r\n          },\r\n          async () => {\r\n            await new Promise(resolve => setTimeout(resolve, 1500));\r\n            console.log(`Removed seat ${number}, row ${row}, id ${id}`);\r\n            // A value of null will reset the tooltip to the original while '' will hide the tooltip\r\n            const newTooltip = [\"A\", \"B\", \"C\"].includes(row) ? null : \"\";\r\n            removeCb(row, number, newTooltip);\r\n            this.seats = this.tempSeats.filter(function (el) { return (el.row != row && el.seatnum != number); });\r\n            debugger;\r\n            this.setState({ loading: false });\r\n          }\r\n        );\r\n      };\r\n    \r\n      render() {\r\n        const { loading } = this.state;\r\n        return (\r\n            this.props.rows.length > 1 &&\r\n            <div>\r\n              <h2>Seat Picker</h2>\r\n              <div style={{ marginTop: \"50px\" }}>\r\n                <SeatPicker\r\n                  addSeatCallback={this.addSeatCallback}\r\n                  removeSeatCallback={this.removeSeatCallback}\r\n                  rows={this.props.rows}\r\n                  maxReservableSeats={3}\r\n                  alpha\r\n                  visible\r\n                  selectedByDefault\r\n                  loading={loading}\r\n                  tooltipProps={{ multiline: true }}\r\n                />\r\n              </div>\r\n              <br></br>\r\n              <button title=\"Click\" onClick={this._onClick}>Save</button>\r\n            </div>\r\n          );\r\n      }\r\n    \r\n      _onClick = () => {\r\n        debugger;\r\n        let update = this.props.updatedRows;\r\n        this.props.saveSeatAllocation(update);\r\n        window.location.reload(true);\r\n      };\r\n    \r\n    }\r\n    \r\n    \r\n    const mapStateToProps = (state) => {\r\n        debugger;\r\n      return {\r\n        rows: state.seat.rows,\r\n        updatedRows: state.seat.updatedRows\r\n      };\r\n    };\r\n    \r\n    const mapDispatchToProps = (dispatch) => {\r\n      return {\r\n        getSeats: () => dispatch(service.getSeats),\r\n        getUpdatedSeat: seat => dispatch(action.getUpdatedSeat(seat)),\r\n        updateSeatAllocation: seat => dispatch(action.updateSeatAllocation(seat)),\r\n        saveSeatAllocation: updatedRows => dispatch(service.saveSeatAllocation(updatedRows))\r\n      };\r\n    };\r\n    \r\n    \r\n    export default connect(mapStateToProps,mapDispatchToProps)(SeatAllocation);\r\n\r\n\r\n","import React from 'react';\nimport { BrowserRouter,Switch,Route } from 'react-router-dom';\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Navbar from './components/layout/Navbar'\nimport CreateCheckinList from './components/passenger/CreateCheckinList'\nimport CheckinDetails  from './components/passenger/CheckinDetails'\nimport SeatAllocation from './components/seats/SeatAllocation'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route path='/signin' component={SignIn}/>\n        <Route path='/signup' component={SignUp}/>\n        <Route path='/createCheckin' component={CreateCheckinList}/>\n        <Route path='/getCheckDetails' component={CheckinDetails}/>\n        <Route path='/seatAllocation' component={SeatAllocation}/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionType from '../action/actionType'\r\n\r\nconst intialstate={\r\n    testPassenger:[\r\n        {  passengerName:'',firstName:'',lastName:'',address:'',age:'',gender:'',passportNo:'',\r\n        specialPrivilage:'',foodFee:'',baggageFee:'',servicesFee:'',seatNo:''}\r\n    ],\r\n    redirect:false\r\n}\r\n\r\nconst passReducer=(state=intialstate,action)=>{\r\n    switch(action.type){\r\n        case actionType.CREATE_PASSENGERS:\r\n            localStorage.clear();\r\n            debugger;\r\n           var data=action.payload;\r\n           var passString=localStorage.getItem('passengerList');\r\n        //    var list=JSON.parse(passString)\r\n        let list=[];\r\n           if(passString!==null&&passString!==undefined&&passString!==''){\r\n               list=JSON.parse(passString);\r\n               list.push(data);\r\n           }else{\r\n               list=[data];\r\n           }\r\n           var stringifyJson=JSON.stringify(list);\r\n           localStorage.setItem('passengerList',stringifyJson);\r\n           return Object.assign({}, state, { testPassenger:list ,redirect:true })\r\n\r\n        case actionType.GET_ALL_PASSENGERS:\r\n            var passDataString=localStorage.getItem('passengerList')\r\n            var passData=JSON.parse(passDataString);\r\n            console.log(passData,\"Get Details In Reducer......\")\r\n            return{\r\n                ...state,\r\n                testPassenger:passData\r\n            }\r\n            // console.log(\"hello this is my reducer\")\r\n            // return {\r\n            //     ...state,\r\n            //     testPassenger:[\r\n            //         {passName:\"abc\",age:\"23\"},{ passName:\"fgh\",age:\"45\"}\r\n            //     ]\r\n            // }\r\n        \r\n        case actionType.UPDATE_PASSENGERS:    \r\n            return {\r\n                ...state,\r\n                testPassenger:[\r\n                    {passengerName:\"abc\",age:\"23\"},{ passengerName:\"fgh\",age:\"45\"}\r\n                ] \r\n            }    \r\n        default:\r\n            return state;   \r\n    }\r\n}\r\n\r\nexport default passReducer;","import * as actionType from '../action/actionType'\r\n\r\nconst initialState = {\r\n    rows: [[]],\r\n    updatedRows: [[]]\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.CALL_SEATALLOCATION:\r\n            debugger;\r\n            var rows = action.payload.rowsPayload;\r\n            var updatedRows = action.payload.updatedRowsPayload;\r\n            return Object.assign({}, state, { rows: rows, updatedRows: updatedRows  })\r\n        case actionType.CALL_SEATRESERVE:\r\n            debugger;\r\n            var seat = action.payload;\r\n            var newrows = state.updatedRows;\r\n            newrows.forEach(function (itemRow, index1) { \r\n                itemRow.forEach(function (col, index2) {\r\n                    if(col != null && col.id == seat.id && col.number == seat.number){\r\n                        newrows[index1][index2] = Object.assign({},newrows[index1][index2], {isReserved: true});\r\n                        return false;\r\n                    }\r\n                });\r\n            });\r\n            return Object.assign({}, state, {updatedRows: newrows}) \r\n        case actionType.UPDATE_SEATALLOCATION:\r\n            \r\n            return {\r\n                ...state,\r\n                testob: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import authReducer from './authReducer'\r\nimport passReducer from './passReducer'\r\nimport seatReducer from './seatReducer'\r\nimport {combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    pass: passReducer,\r\n    seat: seatReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux'\nimport rootReducer from  './store/reducer/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store= createStore(rootReducer,applyMiddleware(thunk));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}